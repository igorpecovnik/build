name: Pull request jobs
on: [pull_request]

jobs:
  shellcheck:
    name: BASH syntax checking
    runs-on: ubuntu-20.04
    steps:
       - name: Checkout repository
         uses: actions/checkout@v2
       - name: Environment variables
         run: sudo -E bash -c set
       - name: Install required packages
         run: sudo apt-get install shellcheck jq
       - name: "shellcheck lint error report json format"
         shell: bash {0}
         run: |
          shellcheck -f json -x -s bash -S warning -e SC2034,SC1090,SC2154,SC2153 lib/*.sh > report.json
          cat report.json |jq -C 'group_by(.file)|.[] | {file: [(limit(1;.[].file)), {shellcheck_codes: [{code: (group_by(.code)|.[] | limit(1;.[].code)), count: length}]}], file_error_count: length}'
  beta:
    name: Build changed kernels
    runs-on: ubuntu-20.04
    steps:

        - name: Checkout Armbian build script

          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/build
            path: build
            ref: ${{ github.event.pull_request.head.sha }}
            clean: true

#        - name: Checkout Armbian support scripts
#
#          uses: actions/checkout@v2
#          with:
#            fetch-depth: 0
#            repository: armbian/scripts
#            token: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
#            path: scripts
#            clean: true

        - run: |
            
            cd build
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" 'prepare_host'
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no"

        - name: upload artefacts
          uses: actions/upload-artifact@v2
          with:
            name: Created packages
            path: output/debs/
