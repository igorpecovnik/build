name: Pull request jobs
on: [pull_request]
  types: [ ready_for_review ]

jobs:
  shellcheck:
    name: BASH syntax checking
    runs-on: ubuntu-20.04
    steps:
       - name: Checkout repository
         uses: actions/checkout@v2
       - name: Environment variables
         run: sudo -E bash -c set
       - name: Install required packages
         run: sudo apt-get install shellcheck jq
       - name: "shellcheck lint error report json format"
         shell: bash {0}
         run: |
          shellcheck -f json -x -s bash -S warning -e SC2034,SC1090,SC2154,SC2153 lib/*.sh > report.json
          cat report.json |jq -C 'group_by(.file)|.[] | {file: [(limit(1;.[].file)), {shellcheck_codes: [{code: (group_by(.code)|.[] | limit(1;.[].code)), count: length}]}], file_error_count: length}'
  beta:
    name: Build changed kernels
    runs-on: ubuntu-20.04
    steps:

        - name: Checkout Armbian build script

          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/build
            path: build
            ref: ${{ github.event.pull_request.head.sha }}
            clean: true

#        - name: Checkout Armbian support scripts
#
#          uses: actions/checkout@v2
#          with:
#            fetch-depth: 0
#            repository: armbian/scripts
#            token: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
#            path: scripts
#            clean: true

        - run: |
            
            cd build
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" 'prepare_host'
#            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no"




      name: Changed beta kernels
      needs: merge
      runs-on: [self-hosted, Linux, x64, big]
      timeout-minutes: 720
      if: ${{ github.repository_owner == 'Armbian' }}
      steps:

        - name: Fix permissions

          run: |

            # make sure no temporally dirs are mounted from previous runs
            while :
            do
                sudo pkill compile.sh || true
                sudo pkill arm-binfmt-P || true
                sudo pkill aarch64-binfmt-P || true
                sudo pkill pixz || true
                [[ "$(df | grep "/.tmp" | wc -l)" -eq 0 ]] && sudo rm -rf build/.tmp && break
                echo "Mounted temp directories. Trying to unmount."
                df | grep ".tmp" | awk '{print $6}' | xargs sudo umount 2>/dev/null || true
                sleep 10
            done

            sudo chown -R $USER:$USER build/.git

        - name: Checkout Armbian build script

          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/build
            path: build
            ref: nightly
            clean: false

        - name: Checkout Armbian support scripts

          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/scripts
            token: ${{ secrets.SCRIPTS_ACCESS_TOKEN }}
            path: scripts
            clean: true

        - name: Import GPG key

          uses: crazy-max/ghaction-import-gpg@v3
          with:
            gpg-private-key: ${{ secrets.GPG_KEY2 }}
            passphrase: ${{ secrets.GPG_PASSPHRASE2 }}
            workdir: scripts
            git-user-signingkey: true
            git-commit-gpgsign: true

        - name: Build all changed kernels for beta repository

          run: |

            cd build
            rm -rf output/debs-beta/*
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" \
            REPOSITORY_INSTALL="u-boot,kernel" 'prepare_host'
            mkdir -p cache/hash-beta
            sudo rsync -ar --delete ../scripts/hash-beta/. cache/hash-beta/ 2> /dev/null
            sudo cp ../scripts/configs/* userpatches/
            sudo rm -f userpatches/targets.conf
            ./compile.sh all-new-beta-kernels


        - name: upload artefacts
          uses: actions/upload-artifact@v2
          with:
            name: Created packages
            path: build/output/debs/
