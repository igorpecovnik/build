name: Build beta images

on:

  workflow_dispatch:

#  schedule:
#    - cron:  '0 4 * * *'

jobs:

    beta-cli-images:

      name: Update CLI beta images
      runs-on: [self-hosted, Linux, x64, big]
      if: github.ref == 'refs/heads/master'
      steps:

        - name: Import GPG key
          uses: crazy-max/ghaction-import-gpg@v3
          with:
            gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            workdir: scripts
            git-user-signingkey: true
            git-commit-gpgsign: true

        - name: Build beta images
          env:
            GPG_PASS: ${{ secrets.PASSPHRASE }}
          run: |
            cd build
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" \
            USE_TORRENT="yes" REPOSITORY_INSTALL="kernel" 'prepare_host'
            PARALLEL_BUILDS=$(awk '{printf("%d",$1/4000)}' <<<$(($(LC_ALL=C free -w 2>/dev/null | grep "^Mem" | awk '{print $2}' || LC_ALL=C free | grep "^Mem"| awk '{print $2}')/1024)))
            sudo ln -sf ../config/targets-cli-beta.conf userpatches/targets.conf
            ./compile.sh all-new-beta-images MULTITHREAD="${PARALLEL_BUILDS}" GPG_PASS="${GPG_PASS}"

    beta-desktop-images:

      name: Update desktop beta images
      runs-on: [self-hosted, Linux, x64, big]
      if: github.ref == 'refs/heads/master'
      steps:

        - name: Import GPG key
          uses: crazy-max/ghaction-import-gpg@v3
          with:
            gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
            passphrase: ${{ secrets.PASSPHRASE }}
            workdir: scripts
            git-user-signingkey: true
            git-commit-gpgsign: true

        - name: Build beta images
          env:
            GPG_PASS: ${{ secrets.PASSPHRASE }}
          run: |
            cd build
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" \
            USE_TORRENT="yes" REPOSITORY_INSTALL="kernel" 'prepare_host'
            PARALLEL_BUILDS=$(awk '{printf("%d",$1/10000)}' <<<$(($(LC_ALL=C free -w 2>/dev/null | grep "^Mem" | awk '{print $2}' || LC_ALL=C free | grep "^Mem"| awk '{print $2}')/1024)))
            sudo ln -sf ../config/targets-desktop-beta.conf userpatches/targets.conf
            ./compile.sh all-new-beta-images MULTITHREAD="${PARALLEL_BUILDS}" GPG_PASS="${GPG_PASS}"

    torrents:

      name: Update download infrastructure
      needs: [beta-cli-images, beta-desktop-images]
      runs-on: [self-hosted, Linux, x64]

      steps:

        - name: Install SSH key for torrent
          uses: shimataro/ssh-key-action@v2
          with:
            key: ${{ secrets.KEY_FOR_TORRENT }}
            name: id_torrent # optional
            known_hosts: ${{ secrets.KNOWN_HOSTS_TORRENT }}
            if_key_exists: replace

        - name: Create torrents
          run: ssh -i ~/.ssh/id_torrent ${{ secrets.USER_TORRENT }}@${{ secrets.SSH_HOST }}

    finish:
      name: Cleaning
      needs: [torrents]
      runs-on: [self-hosted, Linux, x64, big]
      steps:
        - name: Run script
          shell: bash {0}
          run: |
            echo "Stop"
