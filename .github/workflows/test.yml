name: Armbian CI Pro
on:
  push:
    branches: master
  schedule:
    - cron:  '0 */3 * * *'
jobs:
    prepare:
      runs-on: [self-hosted, Linux, x64]
      steps:
        - name: Checkout Armbian build script
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/build
            path: build
            ref: nightly
            clean: false
        - name: Checkout Armbian support scripts
          uses: actions/checkout@v2
          with:
            fetch-depth: 0
            repository: armbian/scripts
            token: ${{ secrets.PAT }}
            path: scripts
            clean: false
    common:
      needs: prepare
      runs-on: [self-hosted, Linux, x64]
      steps:
        - run: |
            echo "BLTPATH=\"$(pwd)/build/\"" | tee scripts/cacherebuild.conf scripts/betarepository.conf >/dev/null
            cd build
            [[ ! -f .ignore_changes ]] && sudo touch .ignore_changes
            ./compile.sh BOARD=cubietruck BRANCH=current KERNEL_ONLY="yes" RELEASE=focal KERNEL_CONFIGURE="no" 'prepare_host'
            sudo cp ../scripts/configs/* userpatches/
            sudo sed -i "s/-it --rm/-i --rm/" config/templates/config-docker.conf
    parallel:
      needs: common
      runs-on: [self-hosted, Linux, x64]
      strategy:
        matrix:
          run: ['Rootfs cache rebuild', 'run2']
      steps:
        - run: |
            cd scripts
            run-one ./cacherebuild.sh
        - run: |
            cd build
           ./compile.sh docker KERNEL_ONLY="yes" BOARD="bananapi" BRANCH="current" KERNEL_CONFIGURE="no" USE_TORRENT="yes" REPOSITORY_INSTALL="kernel"
    finish:
      needs: parallel
      runs-on: [self-hosted, Linux, x64]
      steps:
        - name: Run script
          shell: bash {0}
          run: |
            echo "xxxx"
